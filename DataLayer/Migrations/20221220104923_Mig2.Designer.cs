// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(ProjectDBContext))]
    [Migration("20221220104923_Mig2")]
    partial class Mig2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusinessLayer.Team", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("BusinessLayer.VacationDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CurrentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("ImageOfDoc")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("MedicineReasons")
                        .HasColumnType("bit");

                    b.Property<string>("SenderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SenderId");

                    b.ToTable("VacationDocs");
                });

            modelBuilder.Entity("BusinessLayer.Worker", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamID1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamID1");

                    b.ToTable("Workers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Worker");
                });

            modelBuilder.Entity("BusinessLayer.CEO", b =>
                {
                    b.HasBaseType("BusinessLayer.Worker");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("CEO");
                });

            modelBuilder.Entity("BusinessLayer.Developer", b =>
                {
                    b.HasBaseType("BusinessLayer.Worker");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<int>("TeamID")
                        .HasColumnType("int")
                        .HasColumnName("Developer_TeamID");

                    b.HasDiscriminator().HasValue("Developer");
                });

            modelBuilder.Entity("BusinessLayer.TeamLeader", b =>
                {
                    b.HasBaseType("BusinessLayer.Worker");

                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("TeamLeader");
                });

            modelBuilder.Entity("BusinessLayer.VacationDoc", b =>
                {
                    b.HasOne("BusinessLayer.Worker", "Sender")
                        .WithMany("Vacations")
                        .HasForeignKey("SenderId");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("BusinessLayer.Worker", b =>
                {
                    b.HasOne("BusinessLayer.Team", null)
                        .WithMany("Workers")
                        .HasForeignKey("TeamID1");
                });

            modelBuilder.Entity("BusinessLayer.Team", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("BusinessLayer.Worker", b =>
                {
                    b.Navigation("Vacations");
                });
#pragma warning restore 612, 618
        }
    }
}
